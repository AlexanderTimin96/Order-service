openapi: 3.0.1
info:
  title: "Spring Boot REST API: Orders"
  description: Spring Boot REST API Documentation
  version: v1.0
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: REST API for order
    description: "REST APIs for order - Create order, Get all order"
paths:
  /api/orders:
    get:
      tags:
        - REST API for order
      summary: Get all user REST API
      description: Get all user REST API is used to get all user in a database
      operationId: getAllOrder
      responses:
        "200":
          description: HTTP Status 200 SUCCESS
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      tags:
        - REST API for order
      summary: Create order REST API
      description: Create order REST API is used to save user in a database
      operationId: createdOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
        required: true
      responses:
        "400":
          description: HTTP Status 400 BAD REQUEST
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseMsg'
        "201":
          description: HTTP Status 201 CREATED
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseMsg'
components:
  schemas:
    OrderDTO:
      type: object
      properties:
        userId:
          minimum: 1
          type: integer
          description: User id
          format: int64
        items:
          type: array
          description: List orderItems
          items:
            $ref: '#/components/schemas/OrderItemDTO'
      description: OrderDto model information
    OrderItemDTO:
      required:
        - nameProduct
      type: object
      properties:
        nameProduct:
          type: string
          description: Product name
        quantity:
          minimum: 1
          type: integer
          description: Quantity of products
          format: int32
        description:
          type: string
          description: Description of products
        price:
          minimum: 100
          type: integer
          description: Product price
          format: int64
      description: OrderItemDTO model information
    ResponseMsg:
      type: object
      properties:
        orderId:
          type: integer
          description: Order id
          format: int64
        message:
          type: string
          description: message
      description: response to order creation request
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          description: User id
          format: int64
        totalPrice:
          type: integer
          description: Total price
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      description: Order model information
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nameProduct:
          type: string
          description: Product name
        quantity:
          type: integer
          description: Quantity of products
          format: int32
        description:
          type: string
          description: Description of products
        price:
          type: integer
          description: Product price
          format: int64
        order:
          $ref: '#/components/schemas/Order'
      description: Order item model information
